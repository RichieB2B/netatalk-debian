--- netatalk/bin/uniconv/Makefile.am.old	2005-07-13 15:14:58.769900582 +0200
+++ netatalk/bin/uniconv/Makefile.am	2005-07-13 15:16:02.381823878 +0200
@@ -2,7 +2,7 @@
 
 INCLUDES = -I$(top_srcdir)/include -I$(top_srcdir)/sys
 
-bin_PROGRAMS = uniconv
+sbin_PROGRAMS = netatalk-uniconv
 
-uniconv_SOURCES = uniconv.c iso8859_1_adapted.c
-uniconv_LDADD = $(top_builddir)/libatalk/cnid/libcnid.la $(top_builddir)/libatalk/libatalk.la
+netatalk_uniconv_SOURCES = uniconv.c iso8859_1_adapted.c
+netatalk_uniconv_LDADD = $(top_builddir)/libatalk/cnid/libcnid.la $(top_builddir)/libatalk/libatalk.la
--- netatalk/man/man1/uniconv.1.tmpl.old	2005-07-13 15:17:08.883737627 +0200
+++ netatalk/man/man1/uniconv.1.tmpl	2005-07-13 15:24:37.281120223 +0200
@@ -1,10 +1,10 @@
-.TH uniconv 1 "24 Jun 2004" 2.0.3 Netatalk 
+.TH netatalk-uniconv 1 "24 Jun 2004" 2.0.3 Netatalk 
 .SH NAME
-uniconv \- convert Netatalk volume encoding
+netatalk-uniconv \- convert Netatalk volume encoding
 .SH SYNOPSIS
-\fBuniconv\fR [\-ndv] \-c \fBcnidbackend\fR \-f \fBfromcode\fR \-t \fBtocode\fR [\-m \fBmaccode\fR] \fBvolumepath\fR 
+\fBnetatalk-uniconv\fR [\-ndv] \-c \fBcnidbackend\fR \-f \fBfromcode\fR \-t \fBtocode\fR [\-m \fBmaccode\fR] \fBvolumepath\fR 
 .SH DESCRIPTION
-uniconv converts the volume encoding of
+netatalk-uniconv converts the volume encoding of
 \fIvolumepath\fR from the \fIfromcode\fR
 to the \fItocode\fR encoding.
 .SH OPTIONS
@@ -60,7 +60,7 @@
 and CAP. If you want to use other charsets, they must be provided by
 \fBiconv\fR(1)
 .PP
-uniconv also knows iso\-8859.adapted, an old style
+netatalk-uniconv also knows iso\-8859.adapted, an old style
 1.x NLS widely used. This is only intended for upgrading old volumes,
 \fBafpd\fR(8)
 cannot handle iso\-8859.adapted anymore.
@@ -75,49 +75,53 @@
 .PP
 If you change a lot of filenames at once, chances are higher that
 the afpds fallback mechanisms fail, i.e. files will be assigned new IDs,
-even though the file hasn't changed. uniconv
+even though the file hasn't changed. netatalk-uniconv
 therefore updates the CNID entry for each file/directory directly after it
 changes the name to avoid inconsistencies. The two supported backends for
 volumes, dbd and cdb, use the same CNID db format. Therefore, you
-\fIcould\fR use uniconv with cdb and
+\fIcould\fR use netatalk-uniconv with cdb and
 afpd with dbd later.
 .PP
 \fBWarning\fR: There must not be two
 processes opening the CNID database using different backends at once! If a
 volume is still opened with dbd (cnid_metad/cnid_dbd) and you start
-uniconv with cdb, the result will be a corrupted CNID
+netatalk-uniconv with cdb, the result will be a corrupted CNID
 database, as the two backends use different locking schemes. You might run
 into additional problems, e.g. if dbd is compiled with transactions, cdb
 will not update the transaction logs.
 .PP
 In general, it is recommended to use the same backend for
-uniconv you are using with
+netatalk-uniconv you are using with
 \fBafpd\fR(8).
 .SH EXAMPLES
 convert 1.x CAP encoded volume to UTF\-8, clients used MacRoman
 codepage, cnidscheme is dbd:
 .PP
 .nf
-example%\fB uniconv \-c dbd \-f ASCII \-t UTF8 \-m MAC_ROMAN /path/to/share\fR
+example%\fB netatalk-uniconv \-c dbd \-f ASCII \-t UTF8 \-m MAC_ROMAN /path/to/share\fR
 .fi
 .PP
 convert iso8859\-1 volume to UTF\-8, cnidscheme is cdb:
 .PP
 .nf
-example%\fB uniconv \-c cdb \-f ISO\-8859\-1 \-t UTF8 \-m MAC_ROMAN /path/to/share\fR
+example%\fB netatalk-uniconv \-c cdb \-f ISO\-8859\-1 \-t UTF8 \-m MAC_ROMAN /path/to/share\fR
 .fi
 .PP
 convert 1.x volume using iso8859\-1 adapted NLS to CAP encoding:
 .PP
 .nf
-example%\fB uniconv \-f ISO\-8859\-ADAPTED \-t ASCII \-m MAC_ROMAN/path/to/share\fR
+example%\fB netatalk-uniconv \-f ISO\-8859\-ADAPTED \-t ASCII \-m MAC_ROMAN/path/to/share\fR
 .fi
 .PP
 convert UTF\-8 volume to CAP, for MacCyrillic clients:
 .PP
 .nf
-example%\fB uniconv \-f UTF8 \-t ASCII \-m MAC_CYRILLIC /path/to/share\fR
+example%\fB netatalk-uniconv \-f UTF8 \-t ASCII \-m MAC_CYRILLIC /path/to/share\fR
 .fi
+.SH "DEBIAN NOTES"
+\fInetatalk-uniconv\fR is the Debian version of upstream's \fIuniconv\fR
+program. This rename was necessary to avoid naming conflicts with other
+packages. Apart from the name the program works identical.
 .SH "SEE ALSO"
 \fBAppleVolumes.default\fR(5),\fBafpd\fR(8),\fBiconv\fR(1),\fBcnid_metad\fR(8),\fBcnid_dbd\fR(8)
 
